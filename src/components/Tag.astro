---
export interface Props {
  name: string;
  size?: "sm" | "lg";
}

const { name, size = "sm" } = Astro.props;
---

<li
  class={`inline-block ${
    size === "sm"
      ? "my-1 underline-offset-4 dark:text-gray-300 transition-colors bg-gray-200 dark:bg-gray-800 dark:hover:bg-gray-700 dark:hover:text-gray-200 duration-300 hover:bg-gray-300 hover:text-gray-700 px-2 py-1 rounded text-gray-600"
      : "my-3 mx-1 underline-offset-8 dark:text-gray-300 transition-colors bg-red-200 dark:bg-red-800 dark:hover:bg-gray-700 dark:hover:text-gray-200 duration-300 hover:bg-gray-300 hover:text-red-700 px-2 py-1 rounded text-gray-600"
  }`}
>
  <a
  href={`/tags/${name.toLowerCase()}`}
    transition:name={name.toLowerCase()}
    class={`${
      size === "sm" ? "pr-1 text-sm" : "pr-2 text-lg "
    } group text-transparent bg-gradient-to-r from-indigo-700 via-blue-500 to-cyan-400 bg-clip-text no-underline drop-shadow-md hover:drop-shadow-xl tagCard `}
  >
  &nbsp;<span>{name.toLowerCase()}</span>
  </a>
</li>
 

<style>
  a {
    @apply relative underline decoration-dashed hover:-top-0.5 hover:text-skin-accent focus-visible:p-1;
  }
  a svg {
    @apply -mr-5 h-6 w-6 scale-95 text-skin-base opacity-80 group-hover:fill-skin-accent;
  }
</style>