---
import { SITE } from "src/config";
import LinkButton from "./LinkButton.astro";

export interface Props {
  activeNav?: "blog" | "tags" | "sobre" | "pesquisa";
}

const { activeNav } = Astro.props;
---

<header class="fixed z-20 w-full backdrop-blur-md">
  <div class="mx-auto max-w-4xl">
    <nav id="nav-menu" class="top-nav-wrap flex items-center text-base">
      <a
        href="/"
        class="logo text-transparent bg-gradient-to-r from-indigo-700 via-blue-500 to-cyan-400 bg-clip-text"
      >
        <h2
          class="font-mplus text-2xl font-semibold tracking-tighter sm:text-3xl"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="mr-2 inline-block h-8 w-8 sm:mr-0 sm:h-10 sm:w-10"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M8.646 5.646a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708-.708L10.293 8 8.646 6.354a.5.5 0 0 1 0-.708zm-1.292 0a.5.5 0 0 0-.708 0l-2 2a.5.5 0 0 0 0 .708l2 2a.5.5 0 0 0 .708-.708L5.707 8l1.647-1.646a.5.5 0 0 0 0-.708z"
            ></path>
            <path
              d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z"
            ></path>
            <path
              d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z"
            ></path>
          </svg>
          {SITE.title}
        </h2>
      </a>
      <div class="flex-1"></div>
      <button
        class="hamburger-menu focus-outline"
        aria-label="Open Menu"
        aria-expanded="false"
        aria-controls="menu-items"
      >
        <div class="icon-container flex">
          <div id="first-line"></div>
          <div id="second-line"></div>
          <div id="third-line"></div>
        </div>
      </button>

      <ul id="menu-items" class="display-none pt-8 sm:flex">
        <li>
          <a href="/blog" class={activeNav === "blog" ? "active" : ""}> Blog</a>
        </li>
        <li>
          <a href="/tags" class={activeNav === "tags" ? "active" : ""}> Tags</a>
        </li>
        <li>
          <a href="/sobre" class={activeNav === "sobre" ? "active" : ""}>
            Sobre
          </a>
        </li>
        <li>
          <LinkButton
            href="/pesquisa"
            className={`focus-outline p-3 sm:p-1 ${
              activeNav === "pesquisa" ? "active" : ""
            }`}
            ariaLabel="pesquisa"
            title="Pesquisa"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="scale-125 sm:scale-100"
              ><path
                d="M19.023 16.977a35.13 35.13 0 0 1-1.367-1.384c-.372-.378-.596-.653-.596-.653l-2.8-1.337A6.962 6.962 0 0 0 16 9c0-3.859-3.14-7-7-7S2 5.141 2 9s3.14 7 7 7c1.763 0 3.37-.66 4.603-1.739l1.337 2.8s.275.224.653.596c.387.363.896.854 1.384 1.367l1.358 1.392.604.646 2.121-2.121-.646-.604c-.379-.372-.885-.866-1.391-1.36zM9 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"
              ></path>
            </svg>
          </LinkButton>
        </li>
        <li>
          {
            SITE.lightAndDarkMode && (
              <button
                id="theme-btn"
                class="switch__input"
                title="Toggles light & dark"
                aria-label="auto"
                aria-live="polite"
                role="switch"
              >
                <svg
                  class="switch__icon switch__icon--light"
                  viewBox="0 0 12 12"
                  width="12px"
                  height="12px"
                  aria-hidden="true"
                >
                  <g
                    fill="none"
                    stroke="#fff"
                    stroke-width="1"
                    stroke-linecap="round"
                  >
                    <circle cx="6" cy="6" r="2" />
                    <g stroke-dasharray="1.5 1.5">
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(0,6,6)"
                      />
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(45,6,6)"
                      />
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(90,6,6)"
                      />
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(135,6,6)"
                      />
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(180,6,6)"
                      />
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(225,6,6)"
                      />
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(270,6,6)"
                      />
                      <polyline
                        points="6 10,6 11.5"
                        transform="rotate(315,6,6)"
                      />
                    </g>
                  </g>
                </svg>
                <svg
                  class="switch__icon switch__icon--dark"
                  viewBox="0 0 12 12"
                  width="12px"
                  height="12px"
                  aria-hidden="true"
                >
                  <g
                    fill="none"
                    stroke="#fff"
                    stroke-width="1"
                    stroke-linejoin="round"
                    transform="rotate(-45,6,6)"
                  >
                    <path d="m9,10c-2.209,0-4-1.791-4-4s1.791-4,4-4c.304,0,.598.041.883.105-.995-.992-2.367-1.605-3.883-1.605C2.962.5.5,2.962.5,6s2.462,5.5,5.5,5.5c1.516,0,2.888-.613,3.883-1.605-.285.064-.578.105-.883.105Z" />
                  </g>
                </svg>
              </button>
            )
          }
        </li>
      </ul>
    </nav>
  </div>
  <!-- <Hr /> -->
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-4xl flex-col items-center justify-between sm:flex-row;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-0 p-8 sm:items-center sm:py-2;
  }
  .logo {
    @apply absolute py-1 text-xl font-semibold sm:static sm:text-2xl;
  }
  .hamburger-menu {
    @apply self-end p-2 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }
  nav {
    @apply flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-5 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply w-full px-4 py-3 text-center font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-child(4) a {
    @apply w-auto;
  }
  nav ul li:nth-child(4),
  nav ul li:nth-child(5) {
    @apply col-span-1;
  }
  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }
  nav button {
    @apply p-1;
  }
  #theme-btn {
    @apply p-3 sm:p-1;
  }
  .icon-container {
    @apply h-5 w-6 flex-col items-end justify-between;
  }
  .icon-container div {
    @apply h-0.5 bg-skin-inverted transition-all;
  }
  #first-line {
    @apply w-full;
  }
  #second-line {
    @apply w-3/4;
  }
  #third-line {
    @apply w-1/2;
  }
</style>

<script>
  // Toggle menu
  const menuBtn = document.querySelector(".hamburger-menu");
  const menuItems = document.querySelector("#menu-items")?.classList;

  const iconContainer = document.querySelector(".icon-container")?.classList;
  const firstLine = document.querySelector("#first-line")?.classList;
  const secondLine = document.querySelector("#second-line ")?.classList;
  const thirdLine = document.querySelector("#third-line")?.classList;

  menuBtn!.addEventListener("click", function (event) {
    const menuExpanded = menuBtn?.getAttribute("aria-expanded");
    console.log(menuExpanded)

    if (menuExpanded === "false") {
      menuBtn?.setAttribute("aria-expanded", "true");
      menuBtn?.setAttribute("aria-label", "Close Menu");
      menuItems?.remove("display-none");
      console.log(menuItems)

      // icon animation
      iconContainer?.remove("flex");
      iconContainer?.add("relative");
      firstLine?.add("rotate-45", "absolute", "bottom-1/2");
      thirdLine?.add("display-none");
      secondLine?.add("!w-full", "-rotate-45", "absolute", "bottom-1/2");
    } else {

      menuBtn?.setAttribute("aria-expanded", "false");
      menuBtn?.setAttribute("aria-label", "Open Menu");
      menuItems?.add("display-none");

      console.log(menuItems)

      // icon animation
      iconContainer?.add("flex");
      iconContainer?.remove("relative");
      firstLine?.remove("rotate-45", "absolute", "bottom-1/2");
      thirdLine?.remove("display-none");
      secondLine?.remove("!w-full", "-rotate-45", "absolute", "bottom-1/2");
    }
  });
</script>
